//linkedlist that is does not invert the input order.
#include <iostream>
#include <cstddef>
using namespace std;	
class Node
{
    public:
        int data;
        Node *next;
        Node(int d){
            data=d;
            next=NULL;
        }
};
class Solution{
    public:

    Node* insert(Node *head,int data){
        //initiate a pointer that points to the address of head
        //** is because it is pointer to pointer
        Node** pp = &head; 
        
        //when the box that pointer is pointing has not reached the back yet, 
        //pointer address becomes the next box's address
        //when pointer box becomes NULL, break loop
        while ((*pp)!=NULL){
            pp = &((*pp)->next);
        }
        //new box inserted to the NULL pointer box.
        *pp = new Node(data);
        
        //return the original pointer, which does not change its pointing box
        return head;
            //Complete this method
    }
    
      void display(Node *head)
      {
          Node *start=head;
          while(start)
          {
              cout<<start->data<<" ";
              start=start->next;
          }
      }
};
int main()
{
	Node* head=NULL;
  	Solution mylist;
    int T,data;
    cin>>T;
    while(T-->0){
        cin>>data;
        head=mylist.insert(head,data);
    }	
	mylist.display(head);
		
}